/*
4) Baseando-se na função de Akermann escreva uma função recursiva
 que recebe inteiros não negativos m e n e calcule A(m,n).
 Desenvolvido por Juliana Apgaua Sant'Ana Vidigal
 02.10.2023
*/

#include <stdio.h>

// Função de Ackermann
int ackermann(int m, int n) {
    if (m == 0) {
        return n + 1; // Caso base 1
    } else if (m > 0 && n == 0) {
        return ackermann(m - 1, 1); // Caso base 2
    } else if (m > 0 && n > 0) {
        return ackermann(m - 1, ackermann(m, n - 1)); // Caso geral
    } else {
        // Tratamento de erro para valores negativos de m ou n
        printf("Valores negativos não são permitidos.\n");
        return -1;
    }
}

int main() {
    int m, n;

    printf("Digite os valores de m e n: ");
    scanf("%d %d", &m, &n);

    if (m >= 0 && n >= 0) {
        int result = ackermann(m, n);
        printf("A(%d, %d) = %d\n", m, n, result);
    } else {
        printf("Valores negativos não são permitidos.\n");
    }

    return 0;
}

/*
Os numeros de chamadas recursivas irão depender dos valores informados para m e n.
A funçao de Ackermann cresce rapidamente em função do carater exponencial e pode causar estouro de pilha
para valores maiores de m e n.
*/
